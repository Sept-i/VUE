 一指令
 · 指令的本质就是自定义属性
 · vue模板语法的代码要显示结果在页面，要经过vue的解析
 · v-指令只能写在标签(左边那一半里面)里
   
    1. 数据填充指令
      
      1.0
      v-text  填充标签的纯文本内容
      v-text会替换标签的全部内容 
      还可以字符串拼接
       {{}}差值表达式可以替换指定内容
    
   
     1.1 
        v-html：填充标签的文本内容
        v-html和v-text区别：内容中有 html 结构会被解析成标签
        v-text是只解析文本
        v-html 解析标签+文本
       
        v-html，填充html片段使用原则：本网站内部数据可以使用v-html,第三方的数据不可以用html填充，，永 不用 在用户提交的内容上。 --原因：在网站上动态渲染任意 HTML 是非常危险的，因为容易导致 XSS 攻击。
    
     1.2
        v-pre 
            不会解析差值表达式，原文输出{{msg}}到页面上
               跳过这个元素和它的子元素的编译过程,填充原始信息
            




  
    2
        v-on:为元素绑定事件 ，绑定的方法定义在　methods　属性中
        v-on:事件="事件处理函数"
        @事件="事件处理函数"
     
       这两种等价:
            完整的写法：  v-on:click="doIt"
              v-on简写：  @click="doIt"

   
   
   
    3
         v-show:根据真假切换元素的显示状态
         原理:修改元素的 display 
         值为true 元素显示，false 元素隐藏
         数据改变后,对应的元素显示状态会 同步更新    
  
    
    
    4
         v-if：根据真假切换元素的显示状态
             v-if 和v-show的区别
                 效果都一样(切换元素的显示状态),,
                 但有区别：v-show:显示隐藏文本,标签始终存在，
                  v-if操作dom文档树，隐藏后，标签会从文档树中消失

  
    5
        v-bind 设置元素的属性
        完整的写法→  v-bind:属性名  
        简写→        :属性名




    6 
        v-for 
        根据数据生成列表结构，经常和数组结合使用
        语法：(item,index) in 数据
        item每一项
        index：索引


    7
         v-model 
         v-model: 获取和设置【表单元素的值】
         
         自己的理解：(双向数据绑定：在页面上改变任意一个message的内容，其他的message的内容会跟着一起改变) -->
        <!-- v-model双向绑定：绑定的数据和表单元素的值互相关联就是双向绑定，无论修改谁，另外一个都会跟着改变 -->



    8
        v-cloak 
        解决差值表达式的闪烁问题
         v-cloak没有值 
         v-cloak 纯文本刷新，不会显示{{}}花括号————闪
         v-cloak指令的用法:
              
         1提供样式 [v-cloak]{ 
                 display:none;
             }
         2 在插值表达式中添加 v-cloak 指令

         3. {{}}插值表达式存在的问题：“闪动”
         为什么会有此问题？因为js从上往下执行。他先是看到{{msg}}，再去执行vue
         如何解决？
          解决1：把引入的vue.js文件放到title下面
          解决2：用v-cloak指令
          背后的原理：先通过样式隐藏内容，然后在内存中进行值的替换，替换好之后再显示最终的结果

    
    9
     v-once 只编译一次。后续不能更改
     显示内容之后，不再有响应式功能
     应用场景：如果显示的信息后续不需要再修改，可以用v-once ，提高性能



